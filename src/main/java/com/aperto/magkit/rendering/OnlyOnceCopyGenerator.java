package com.aperto.magkit.rendering;

/*-
 * #%L
 * IBM iX Magnolia Kit
 * %%
 * Copyright (C) 2023 IBM iX
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import info.magnolia.jcr.util.NodeUtil;
import info.magnolia.jcr.util.PropertyUtil;
import info.magnolia.rendering.engine.RenderException;
import info.magnolia.rendering.generator.CopyGenerator;
import info.magnolia.rendering.template.AutoGenerationConfiguration;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.jcr.Node;
import javax.jcr.RepositoryException;

/**
 * A CopyGenerator extension that executes autogeneration only once a parent node.
 *
 * @author wolf.bubenik@aperto.com
 * @since 14.08.2019
 */
public class OnlyOnceCopyGenerator extends CopyGenerator {

    private static final String PN_AUTOGENERATED = "isAutogenerated";
    private static final Logger LOG = LoggerFactory.getLogger(OnlyOnceCopyGenerator.class);

    private Node _parent;

    public OnlyOnceCopyGenerator(final Node parent) {
        super(parent);
        _parent = parent;
    }

    @Override
    public void generate(AutoGenerationConfiguration autoGenerationConfig) throws RenderException {
        if (!PropertyUtil.getBoolean(_parent, PN_AUTOGENERATED, false)) {
            super.generate(autoGenerationConfig);
            try {
                PropertyUtil.setProperty(_parent, PN_AUTOGENERATED, true);
                _parent.getSession().save();
            } catch (RepositoryException e) {
                LOG.error("Failed to set property 'isAutogenerated' to Node " + NodeUtil.getPathIfPossible(_parent), e);
            }
        }
    }
}
